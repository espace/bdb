/* This file automatically generated by extconf.rb */
cu(mBdb,DB_VERSION_MAJOR);
cu(mBdb,DB_VERSION_MINOR);
cu(mBdb,DB_VERSION_PATCH);
cs(mBdb,DB_VERSION_STRING);
cu(mBdb,DB_MAX_PAGES);
cu(mBdb,DB_MAX_RECORDS);
cu(mBdb,DB_DEGREE_2);
cu(mBdb,DB_DIRTY_READ);
cu(mBdb,DB_JOINENV);
cu(mBdb,DB_DBT_APPMALLOC);
cu(mBdb,DB_DBT_DUPOK);
cu(mBdb,DB_DBT_ISSET);
cu(mBdb,DB_DBT_MALLOC);
cu(mBdb,DB_DBT_MULTIPLE);
cu(mBdb,DB_DBT_PARTIAL);
cu(mBdb,DB_DBT_REALLOC);
cu(mBdb,DB_DBT_USERCOPY);
cu(mBdb,DB_DBT_USERMEM);
cu(mBdb,DB_THREADID_STRLEN);
cu(mBdb,DB_LOCKVERSION);
cu(mBdb,DB_FILE_ID_LEN);
cu(mBdb,DB_LOCK_NORUN);
cu(mBdb,DB_LOCK_DEFAULT);
cu(mBdb,DB_LOCK_EXPIRE);
cu(mBdb,DB_LOCK_MAXLOCKS);
cu(mBdb,DB_LOCK_MAXWRITE);
cu(mBdb,DB_LOCK_MINLOCKS);
cu(mBdb,DB_LOCK_MINWRITE);
cu(mBdb,DB_LOCK_OLDEST);
cu(mBdb,DB_LOCK_RANDOM);
cu(mBdb,DB_LOCK_YOUNGEST);
cu(mBdb,DB_HANDLE_LOCK);
cu(mBdb,DB_RECORD_LOCK);
cu(mBdb,DB_PAGE_LOCK);
cu(mBdb,DB_LOGVERSION);
cu(mBdb,DB_LOGOLDVER);
cu(mBdb,DB_LOGMAGIC);
cu(mBdb,DB_user_BEGIN);
cu(mBdb,DB_debug_FLAG);
cu(mBdb,DB_LOG_DISK);
cu(mBdb,DB_LOG_LOCKED);
cu(mBdb,DB_LOG_SILENT_ERR);
cu(mBdb,DB_TXNVERSION);
cu(mBdb,DB_XIDDATASIZE);
ci(mBdb,DB_EID_BROADCAST);
ci(mBdb,DB_EID_INVALID);
cu(mBdb,DB_REP_DEFAULT_PRIORITY);
cu(mBdb,DB_REPMGR_ACKS_ALL);
cu(mBdb,DB_REPMGR_ACKS_ALL_PEERS);
cu(mBdb,DB_REPMGR_ACKS_NONE);
cu(mBdb,DB_REPMGR_ACKS_ONE);
cu(mBdb,DB_REPMGR_ACKS_ONE_PEER);
cu(mBdb,DB_REPMGR_ACKS_QUORUM);
cu(mBdb,DB_REP_ACK_TIMEOUT);
cu(mBdb,DB_REP_CHECKPOINT_DELAY);
cu(mBdb,DB_REP_CONNECTION_RETRY);
cu(mBdb,DB_REP_ELECTION_RETRY);
cu(mBdb,DB_REP_ELECTION_TIMEOUT);
cu(mBdb,DB_REP_FULL_ELECTION_TIMEOUT);
cu(mBdb,DB_REP_HEARTBEAT_MONITOR);
cu(mBdb,DB_REP_HEARTBEAT_SEND);
cu(mBdb,DB_REP_LEASE_TIMEOUT);
cu(mBdb,DB_EVENT_NO_SUCH_EVENT);
cu(mBdb,DB_EVENT_PANIC);
cu(mBdb,DB_EVENT_REP_CLIENT);
cu(mBdb,DB_EVENT_REP_ELECTED);
cu(mBdb,DB_EVENT_REP_MASTER);
cu(mBdb,DB_EVENT_REP_NEWMASTER);
cu(mBdb,DB_EVENT_REP_PERM_FAILED);
cu(mBdb,DB_EVENT_REP_STARTUPDONE);
cu(mBdb,DB_EVENT_WRITE_FAILED);
cu(mBdb,DB_REPMGR_CONNECTED);
cu(mBdb,DB_REPMGR_DISCONNECTED);
cu(mBdb,DB_RENAMEMAGIC);
cu(mBdb,DB_BTREEVERSION);
cu(mBdb,DB_BTREEOLDVER);
cu(mBdb,DB_BTREEMAGIC);
cu(mBdb,DB_HASHVERSION);
cu(mBdb,DB_HASHOLDVER);
cu(mBdb,DB_HASHMAGIC);
cu(mBdb,DB_QAMVERSION);
cu(mBdb,DB_QAMOLDVER);
cu(mBdb,DB_QAMMAGIC);
cu(mBdb,DB_SEQUENCE_VERSION);
cu(mBdb,DB_SEQUENCE_OLDVER);
cu(mBdb,DB_AFTER);
cu(mBdb,DB_APPEND);
cu(mBdb,DB_BEFORE);
cu(mBdb,DB_CONSUME);
cu(mBdb,DB_CONSUME_WAIT);
cu(mBdb,DB_CURRENT);
cu(mBdb,DB_FIRST);
cu(mBdb,DB_GET_BOTH);
cu(mBdb,DB_GET_BOTHC);
cu(mBdb,DB_GET_BOTH_RANGE);
cu(mBdb,DB_GET_RECNO);
cu(mBdb,DB_JOIN_ITEM);
cu(mBdb,DB_KEYFIRST);
cu(mBdb,DB_KEYLAST);
cu(mBdb,DB_LAST);
cu(mBdb,DB_NEXT);
cu(mBdb,DB_NEXT_DUP);
cu(mBdb,DB_NEXT_NODUP);
cu(mBdb,DB_NODUPDATA);
cu(mBdb,DB_NOOVERWRITE);
cu(mBdb,DB_NOSYNC);
cu(mBdb,DB_POSITION);
cu(mBdb,DB_PREV);
cu(mBdb,DB_PREV_DUP);
cu(mBdb,DB_PREV_NODUP);
cu(mBdb,DB_SET);
cu(mBdb,DB_SET_RANGE);
cu(mBdb,DB_SET_RECNO);
cu(mBdb,DB_UPDATE_SECONDARY);
cu(mBdb,DB_WRITECURSOR);
cu(mBdb,DB_WRITELOCK);
cu(mBdb,DB_OPFLAGS_MASK);
ci(mBdb,DB_BUFFER_SMALL);
ci(mBdb,DB_DONOTINDEX);
ci(mBdb,DB_FOREIGN_CONFLICT);
ci(mBdb,DB_KEYEMPTY);
ci(mBdb,DB_KEYEXIST);
ci(mBdb,DB_LOCK_DEADLOCK);
ci(mBdb,DB_LOCK_NOTGRANTED);
ci(mBdb,DB_LOG_BUFFER_FULL);
ci(mBdb,DB_NOSERVER);
ci(mBdb,DB_NOSERVER_HOME);
ci(mBdb,DB_NOSERVER_ID);
ci(mBdb,DB_NOTFOUND);
ci(mBdb,DB_OLD_VERSION);
ci(mBdb,DB_PAGE_NOTFOUND);
ci(mBdb,DB_REP_DUPMASTER);
ci(mBdb,DB_REP_HANDLE_DEAD);
ci(mBdb,DB_REP_HOLDELECTION);
ci(mBdb,DB_REP_IGNORE);
ci(mBdb,DB_REP_ISPERM);
ci(mBdb,DB_REP_JOIN_FAILURE);
ci(mBdb,DB_REP_LEASE_EXPIRED);
ci(mBdb,DB_REP_LOCKOUT);
ci(mBdb,DB_REP_NEWSITE);
ci(mBdb,DB_REP_NOTPERM);
ci(mBdb,DB_REP_UNAVAIL);
ci(mBdb,DB_RUNRECOVERY);
ci(mBdb,DB_SECONDARY_BAD);
ci(mBdb,DB_VERIFY_BAD);
ci(mBdb,DB_VERSION_MISMATCH);
ci(mBdb,DB_ALREADY_ABORTED);
ci(mBdb,DB_DELETED);
ci(mBdb,DB_EVENT_NOT_HANDLED);
ci(mBdb,DB_NEEDSPLIT);
ci(mBdb,DB_REP_BULKOVF);
ci(mBdb,DB_REP_EGENCHG);
ci(mBdb,DB_REP_LOGREADY);
ci(mBdb,DB_REP_NEWMASTER);
ci(mBdb,DB_REP_PAGEDONE);
ci(mBdb,DB_SURPRISE_KID);
ci(mBdb,DB_SWAPBYTES);
ci(mBdb,DB_TIMEOUT);
ci(mBdb,DB_TXN_CKP);
ci(mBdb,DB_VERIFY_FATAL);
ci(mBdb,DB_LOGFILEID_INVALID);
cu(mBdb,DB_ASSOC_IMMUTABLE_KEY);
cu(mBdb,DB_OK_BTREE);
cu(mBdb,DB_OK_HASH);
cu(mBdb,DB_OK_QUEUE);
cu(mBdb,DB_OK_RECNO);
cu(mBdb,DB_AM_CHKSUM);
cu(mBdb,DB_AM_COMPENSATE);
cu(mBdb,DB_AM_CREATED);
cu(mBdb,DB_AM_CREATED_MSTR);
cu(mBdb,DB_AM_DBM_ERROR);
cu(mBdb,DB_AM_DELIMITER);
cu(mBdb,DB_AM_DISCARD);
cu(mBdb,DB_AM_DUP);
cu(mBdb,DB_AM_DUPSORT);
cu(mBdb,DB_AM_ENCRYPT);
cu(mBdb,DB_AM_FIXEDLEN);
cu(mBdb,DB_AM_INMEM);
cu(mBdb,DB_AM_INORDER);
cu(mBdb,DB_AM_IN_RENAME);
cu(mBdb,DB_AM_NOT_DURABLE);
cu(mBdb,DB_AM_OPEN_CALLED);
cu(mBdb,DB_AM_PAD);
cu(mBdb,DB_AM_PGDEF);
cu(mBdb,DB_AM_RDONLY);
cu(mBdb,DB_AM_READ_UNCOMMITTED);
cu(mBdb,DB_AM_RECNUM);
cu(mBdb,DB_AM_RECOVER);
cu(mBdb,DB_AM_RENUMBER);
cu(mBdb,DB_AM_REVSPLITOFF);
cu(mBdb,DB_AM_SECONDARY);
cu(mBdb,DB_AM_SNAPSHOT);
cu(mBdb,DB_AM_SUBDB);
cu(mBdb,DB_AM_SWAP);
cu(mBdb,DB_AM_TXN);
cu(mBdb,DB_AM_VERIFYING);
cu(mBdb,DBC_ACTIVE);
cu(mBdb,DBC_DONTLOCK);
cu(mBdb,DBC_DUPLICATE);
cu(mBdb,DBC_MULTIPLE);
cu(mBdb,DBC_MULTIPLE_KEY);
cu(mBdb,DBC_OPD);
cu(mBdb,DBC_OWN_LID);
cu(mBdb,DBC_READ_COMMITTED);
cu(mBdb,DBC_READ_UNCOMMITTED);
cu(mBdb,DBC_RECOVER);
cu(mBdb,DBC_RMW);
cu(mBdb,DBC_TRANSIENT);
cu(mBdb,DBC_WRITECURSOR);
cu(mBdb,DBC_WRITER);
cu(mBdb,DB_REGION_MAGIC);
cu(mBdb,DB_ENV_AUTO_COMMIT);
cu(mBdb,DB_ENV_CDB_ALLDB);
cu(mBdb,DB_ENV_DIRECT_DB);
cu(mBdb,DB_ENV_DSYNC_DB);
cu(mBdb,DB_ENV_MULTIVERSION);
cu(mBdb,DB_ENV_NOLOCKING);
cu(mBdb,DB_ENV_NOMMAP);
cu(mBdb,DB_ENV_NOPANIC);
cu(mBdb,DB_ENV_OVERWRITE);
cu(mBdb,DB_ENV_REGION_INIT);
cu(mBdb,DB_ENV_RPCCLIENT);
cu(mBdb,DB_ENV_RPCCLIENT_GIVEN);
cu(mBdb,DB_ENV_TIME_NOTGRANTED);
cu(mBdb,DB_ENV_TXN_NOSYNC);
cu(mBdb,DB_ENV_TXN_NOWAIT);
cu(mBdb,DB_ENV_TXN_SNAPSHOT);
cu(mBdb,DB_ENV_TXN_WRITE_NOSYNC);
cu(mBdb,DB_ENV_YIELDCPU);
cu(mBdb,DB_DBM_HSEARCH);
cu(mBdb,DB_AGGRESSIVE);
cu(mBdb,DB_ARCH_ABS);
cu(mBdb,DB_ARCH_DATA);
cu(mBdb,DB_ARCH_LOG);
cu(mBdb,DB_ARCH_REMOVE);
cu(mBdb,DB_AUTO_COMMIT);
cu(mBdb,DB_CDB_ALLDB);
cu(mBdb,DB_CHKSUM);
cu(mBdb,DB_CKP_INTERNAL);
cu(mBdb,DB_CREATE);
cu(mBdb,DB_CXX_NO_EXCEPTIONS);
cu(mBdb,DB_DIRECT);
cu(mBdb,DB_DIRECT_DB);
cu(mBdb,DB_DSYNC_DB);
cu(mBdb,DB_DUP);
cu(mBdb,DB_DUPSORT);
cu(mBdb,DB_DURABLE_UNKNOWN);
cu(mBdb,DB_ENCRYPT);
cu(mBdb,DB_ENCRYPT_AES);
cu(mBdb,DB_EXCL);
cu(mBdb,DB_FAST_STAT);
cu(mBdb,DB_FCNTL_LOCKING);
cu(mBdb,DB_FLUSH);
cu(mBdb,DB_FORCE);
cu(mBdb,DB_FOREIGN_ABORT);
cu(mBdb,DB_FOREIGN_CASCADE);
cu(mBdb,DB_FOREIGN_NULLIFY);
cu(mBdb,DB_FREELIST_ONLY);
cu(mBdb,DB_FREE_SPACE);
cu(mBdb,DB_IGNORE_LEASE);
cu(mBdb,DB_IMMUTABLE_KEY);
cu(mBdb,DB_INIT_CDB);
cu(mBdb,DB_INIT_LOCK);
cu(mBdb,DB_INIT_LOG);
cu(mBdb,DB_INIT_MPOOL);
cu(mBdb,DB_INIT_REP);
cu(mBdb,DB_INIT_TXN);
cu(mBdb,DB_INORDER);
cu(mBdb,DB_JOIN_NOSORT);
cu(mBdb,DB_LOCKDOWN);
cu(mBdb,DB_LOCK_NOWAIT);
cu(mBdb,DB_LOCK_RECORD);
cu(mBdb,DB_LOCK_SET_TIMEOUT);
cu(mBdb,DB_LOCK_SWITCH);
cu(mBdb,DB_LOCK_UPGRADE);
cu(mBdb,DB_LOG_AUTO_REMOVE);
cu(mBdb,DB_LOG_CHKPNT);
cu(mBdb,DB_LOG_COMMIT);
cu(mBdb,DB_LOG_DIRECT);
cu(mBdb,DB_LOG_DSYNC);
cu(mBdb,DB_LOG_IN_MEMORY);
cu(mBdb,DB_LOG_NOCOPY);
cu(mBdb,DB_LOG_NOT_DURABLE);
cu(mBdb,DB_LOG_WRNOSYNC);
cu(mBdb,DB_LOG_ZERO);
cu(mBdb,DB_MPOOL_CREATE);
cu(mBdb,DB_MPOOL_DIRTY);
cu(mBdb,DB_MPOOL_DISCARD);
cu(mBdb,DB_MPOOL_EDIT);
cu(mBdb,DB_MPOOL_FREE);
cu(mBdb,DB_MPOOL_LAST);
cu(mBdb,DB_MPOOL_NEW);
cu(mBdb,DB_MPOOL_NOFILE);
cu(mBdb,DB_MPOOL_NOLOCK);
cu(mBdb,DB_MPOOL_UNLINK);
cu(mBdb,DB_MULTIPLE);
cu(mBdb,DB_MULTIPLE_KEY);
cu(mBdb,DB_MULTIVERSION);
cu(mBdb,DB_MUTEX_ALLOCATED);
cu(mBdb,DB_MUTEX_LOCKED);
cu(mBdb,DB_MUTEX_LOGICAL_LOCK);
cu(mBdb,DB_MUTEX_PROCESS_ONLY);
cu(mBdb,DB_MUTEX_SELF_BLOCK);
cu(mBdb,DB_NOLOCKING);
cu(mBdb,DB_NOMMAP);
cu(mBdb,DB_NOORDERCHK);
cu(mBdb,DB_NOPANIC);
cu(mBdb,DB_NO_AUTO_COMMIT);
cu(mBdb,DB_ODDFILESIZE);
cu(mBdb,DB_ORDERCHKONLY);
cu(mBdb,DB_OVERWRITE);
cu(mBdb,DB_PANIC_ENVIRONMENT);
cu(mBdb,DB_PRINTABLE);
cu(mBdb,DB_PRIVATE);
cu(mBdb,DB_PR_PAGE);
cu(mBdb,DB_PR_RECOVERYTEST);
cu(mBdb,DB_RDONLY);
cu(mBdb,DB_RDWRMASTER);
cu(mBdb,DB_READ_COMMITTED);
cu(mBdb,DB_READ_UNCOMMITTED);
cu(mBdb,DB_RECNUM);
cu(mBdb,DB_RECOVER);
cu(mBdb,DB_RECOVER_FATAL);
cu(mBdb,DB_REGION_INIT);
cu(mBdb,DB_REGISTER);
cu(mBdb,DB_RENUMBER);
cu(mBdb,DB_REPMGR_CONF_2SITE_STRICT);
cu(mBdb,DB_REPMGR_PEER);
cu(mBdb,DB_REP_ANYWHERE);
cu(mBdb,DB_REP_CLIENT);
cu(mBdb,DB_REP_CONF_BULK);
cu(mBdb,DB_REP_CONF_DELAYCLIENT);
cu(mBdb,DB_REP_CONF_LEASE);
cu(mBdb,DB_REP_CONF_NOAUTOINIT);
cu(mBdb,DB_REP_CONF_NOWAIT);
cu(mBdb,DB_REP_ELECTION);
cu(mBdb,DB_REP_MASTER);
cu(mBdb,DB_REP_NOBUFFER);
cu(mBdb,DB_REP_PERMANENT);
cu(mBdb,DB_REP_REREQUEST);
cu(mBdb,DB_REVSPLITOFF);
cu(mBdb,DB_RMW);
cu(mBdb,DB_RPCCLIENT);
cu(mBdb,DB_SALVAGE);
cu(mBdb,DB_SA_SKIPFIRSTKEY);
cu(mBdb,DB_SEQ_DEC);
cu(mBdb,DB_SEQ_INC);
cu(mBdb,DB_SEQ_RANGE_SET);
cu(mBdb,DB_SEQ_WRAP);
cu(mBdb,DB_SEQ_WRAPPED);
cu(mBdb,DB_SET_LOCK_TIMEOUT);
cu(mBdb,DB_SET_TXN_NOW);
cu(mBdb,DB_SET_TXN_TIMEOUT);
cu(mBdb,DB_SNAPSHOT);
cu(mBdb,DB_STAT_ALL);
cu(mBdb,DB_STAT_CLEAR);
cu(mBdb,DB_STAT_LOCK_CONF);
cu(mBdb,DB_STAT_LOCK_LOCKERS);
cu(mBdb,DB_STAT_LOCK_OBJECTS);
cu(mBdb,DB_STAT_LOCK_PARAMS);
cu(mBdb,DB_STAT_MEMP_HASH);
cu(mBdb,DB_STAT_MEMP_NOERROR);
cu(mBdb,DB_STAT_SUBSYSTEM);
cu(mBdb,DB_ST_DUPOK);
cu(mBdb,DB_ST_DUPSET);
cu(mBdb,DB_ST_DUPSORT);
cu(mBdb,DB_ST_IS_RECNO);
cu(mBdb,DB_ST_OVFL_LEAF);
cu(mBdb,DB_ST_RECNUM);
cu(mBdb,DB_ST_RELEN);
cu(mBdb,DB_ST_TOPLEVEL);
cu(mBdb,DB_SYSTEM_MEM);
cu(mBdb,DB_THREAD);
cu(mBdb,DB_TIME_NOTGRANTED);
cu(mBdb,DB_TRUNCATE);
cu(mBdb,DB_TXN_NOSYNC);
cu(mBdb,DB_TXN_NOT_DURABLE);
cu(mBdb,DB_TXN_NOWAIT);
cu(mBdb,DB_TXN_SNAPSHOT);
cu(mBdb,DB_TXN_SYNC);
cu(mBdb,DB_TXN_WAIT);
cu(mBdb,DB_TXN_WRITE_NOSYNC);
cu(mBdb,DB_UNREF);
cu(mBdb,DB_UPGRADE);
cu(mBdb,DB_USE_ENVIRON);
cu(mBdb,DB_USE_ENVIRON_ROOT);
cu(mBdb,DB_VERB_DEADLOCK);
cu(mBdb,DB_VERB_FILEOPS);
cu(mBdb,DB_VERB_FILEOPS_ALL);
cu(mBdb,DB_VERB_RECOVERY);
cu(mBdb,DB_VERB_REGISTER);
cu(mBdb,DB_VERB_REPLICATION);
cu(mBdb,DB_VERB_REPMGR_CONNFAIL);
cu(mBdb,DB_VERB_REPMGR_MISC);
cu(mBdb,DB_VERB_REP_ELECT);
cu(mBdb,DB_VERB_REP_LEASE);
cu(mBdb,DB_VERB_REP_MISC);
cu(mBdb,DB_VERB_REP_MSGS);
cu(mBdb,DB_VERB_REP_SYNC);
cu(mBdb,DB_VERB_WAITSFOR);
cu(mBdb,DB_VERIFY);
cu(mBdb,DB_WRITEOPEN);
cu(mBdb,DB_XA_CREATE);
cu(mBdb,DB_YIELDCPU);
